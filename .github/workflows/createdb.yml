name: Preview DB

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  create_database:
    name: 'Create Database'
    runs-on: ubuntu-latest
    outputs:
      turso_db_url: ${{ steps.set-db-url.outputs.turso_db_url }}
    steps:
      - name: Set New Database Name
        id: set-db-name
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          CLEAN_BRANCH_NAME=$(echo "${BRANCH_NAME}" | tr -cd '[:alnum:]-')
          NEW_DB_NAME="preview-${CLEAN_BRANCH_NAME}"
          echo "NEW_DB_NAME=${NEW_DB_NAME}" >> $GITHUB_ENV

      - name: Check/Create Database and Set TURSO_APP_DB_URL
        id: set-db-url
        run: |
          echo "turso_db_url=libsql://$HOSTNAME" >> $GITHUB_OUTPUT

      - name: Create Initial PR Comment with Deployment Status
        uses: peter-evans/create-or-update-comment@v3
        if: github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            [x]:eyAiYXBwIjogIndlYnNpdGUtcHJldmlldyIgfQ==
            ### Vercel Preview Deployments - In Progress üöÄ

            - Docs Deployment is in progress...
            - Web Deployment is in progress...

  deploy:
    name: Set Environment Variables for Vercel Previews
    runs-on: ubuntu-latest
    needs: [create_database]
    env:
      TURSO_APP_DB_URL: ${{ needs.create_database.outputs.turso_db_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: ./.github/shared
      - name: Install Vercel
        run: pnpm install -g vercel@latest
      - name: Link Vercel Project - Web
        working-directory: apps/web
        run: |
          vercel link --token ${{ secrets.VERCEL_TOKEN }} --yes --scope ${{ secrets.VERCEL_TEAM_ID }}

      # Remove and Set Environment Variable for Web Project in Vercel with Git Branch Scope
      - name: Remove Environment Variable for Web Project in Vercel
        working-directory: apps/web
        run: |
          vercel env rm TURSO_APP_DB_URL preview ${{ github.event.pull_request.head.ref }} --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_TEAM_ID }} --yes || true

      # Set Environment Variable for Web Project in Vercel with Git Branch Scope
      - name: Set Environment Variable for Web Project in Vercel
        working-directory: apps/web
        run: |
          printf '%s' "${{ needs.create_database.outputs.turso_db_url }}" | vercel env add TURSO_APP_DB_URL preview ${{ github.event.pull_request.head.ref }} --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_TEAM_ID }}

      - id: deploy-docs
        name: Deploy to Vercel - Docs
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_DOCS_PROJECT_ID }}
        run: |
          vercel deploy \
            --no-wait \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_TEAM_ID }} \
            > deploy_url_docs.txt

      - name: Wait for Docs Deployment
        id: wait-for-docs
        run: |
          vercel inspect \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_TEAM_ID }} \
            --wait \
            --timeout=10m \
            $(cat deploy_url_docs.txt)

      - name: Get Docs Deployment URL
        id: get-url-docs
        if: success()
        run: |
          echo "Docs Deploy URL: $(cat deploy_url_docs.txt)"
          echo "DOCS_DEPLOYMENT_URL=$(cat deploy_url_docs.txt)" >> $GITHUB_OUTPUT

      - name: Update PR Comment After Docs Deployment Success
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            [x]:eyAiYXBwIjogIndlYnNpdGUtcHJldmlldyIgfQ==
            ### Vercel Preview Deployments - In Progress üöÄ

            - Docs Deployment completed successfully: [View Docs Deployment](${{ steps.get-url-docs.outputs.DOCS_DEPLOYMENT_URL }})
            - Web Deployment is in progress...

      - name: Update PR Comment After Docs Deployment Failure
        uses: peter-evans/create-or-update-comment@v3
        if: failure() && github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            [x]:eyAiYXBwIjogIndlYnNpdGUtcHJldmlldyIgfQ==
            ### Vercel Preview Deployments - Failed ‚ùå

            - Docs Deployment failed. Please [inspect deployment logs](https://vercel.com/deployments/$(cat deploy_url_docs.txt))

      - id: deploy-web
        name: Deploy to Vercel - Web (with Turso DB)
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
        run: |
          vercel deploy \
            --no-wait \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_TEAM_ID }} \
            --env TURSO_APP_DB_URL='${{ needs.create_database.outputs.turso_db_url }}' \
            > deploy_url_web.txt

      - name: Wait for Web Deployment
        id: wait-for-web
        run: |
          vercel inspect \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_TEAM_ID }} \
            --wait \
            --timeout=10m \
            $(cat deploy_url_web.txt)

      - name: Get Web Deployment URL
        id: get-url-web
        if: success()
        run: |
          echo "Web Deploy URL: $(cat deploy_url_web.txt)"
          echo "WEB_DEPLOYMENT_URL=$(cat deploy_url_web.txt)" >> $GITHUB_OUTPUT

      # Update PR Comment After Web Deployment Success
      - name: Update PR Comment After Web Deployment Success
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            [x]:eyAiYXBwIjogIndlYnNpdGUtcHJldmlldyIgfQ==
            ### Vercel Preview Deployments - Completed ‚úÖ

            - Docs preview at [Docs Preview](${{ steps.get-url-docs.outputs.DOCS_DEPLOYMENT_URL }})
            - Web preview at [Web Preview](${{ steps.get-url-web.outputs.WEB_DEPLOYMENT_URL }})

      # Update PR Comment After Web Deployment Failure
      - name: Update PR Comment After Web Deployment Failure
        uses: peter-evans/create-or-update-comment@v3
        if: failure() && github.event_name == 'pull_request'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          body: |
            [x]:eyAiYXBwIjogIndlYnNpdGUtcHJldmlldyIgfQ==
            ### Vercel Preview Deployments - Failed ‚ùå

            - Web Deployment failed. Please [inspect deployment logs](https://vercel.com/deployments/$(cat deploy_url_web.txt))
