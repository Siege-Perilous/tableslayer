name: PR close preview cleanup

on:
  pull_request:
    types: [closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  destroy_resources:
    name: Destroy Vercel Deployment and Turso Database
    runs-on: ubuntu-latest
    steps:
      - name: Set Database Name from Branch
        id: set-db-name
        run: |
          BRANCH_NAME="${{ github.head_ref || github.ref }}"
          CLEAN_BRANCH_NAME=$(echo "${BRANCH_NAME}" | tr -cd '[:alnum:]-')
          DB_NAME="preview-${CLEAN_BRANCH_NAME}"
          echo "DB_NAME=${DB_NAME}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Preview URL
        uses: dlip/get-vercel-deployment-action@v1.0.2
        id: get-vercel-deployment
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ secrets.VERCEL_WEB_PROJECT_ID }}
          github-branch: ${{ github.head_ref }}
          github-commit: ${{ github.event.pull_request.head.sha }}

      - name: Destroy Vercel Deployment
        working-directory: apps/web
        run: |
          vercel remove https://${{ steps.get-vercel-deployment.outputs.deployment-url }} --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_TEAM_ID }} --yes || true

      - name: Delete Turso Database
        run: |
          set -e

          # Define variables
          API_BASE_URL="https://api.turso.tech/v1/organizations/snide/databases"
          AUTH_HEADER="Authorization: Bearer ${{ secrets.TURSO_API_TOKEN }}"
          DB_NAME="${{ env.DB_NAME }}"

          # Delete the database
          HTTP_RESPONSE=$(curl -s -w "\n%{http_code}" -X DELETE \
            -H "$AUTH_HEADER" \
            "$API_BASE_URL/$DB_NAME")

          HTTP_STATUS=$(echo "$HTTP_RESPONSE" | tail -n1)
          RESPONSE=$(echo "$HTTP_RESPONSE" | sed '$d')

          echo "HTTP_STATUS: $HTTP_STATUS"
          echo "RESPONSE: $RESPONSE"

          if [ "$HTTP_STATUS" -ne 204 ] && [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Failed to delete database. HTTP Status: $HTTP_STATUS. Response: $RESPONSE"
            exit 1
          else
            echo "Database deleted successfully."
          fi
